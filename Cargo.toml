[package]
name = "gmsv_async_compress"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type = ["cdylib"]

[dependencies]
gmod = { version = "17.0", default-features = false, features=["hax"] }
litcrypt = "0.3.0"
gmod-lzma = "*"
singlyton = "4.1.1"
tokio = { version = "1.15", features = ["rt", "macros"] }
crossbeam = { version = "0.8", default-features = false, features = ["std", "crossbeam-channel"] }

[profile.release]
strip = "symbols"


[features]
default = ["avx", "sse3", "neon"]

# On x86_64, the "avx" feature enables compilation of AVX-acclerated code. 
# Similarly, the "sse" feature enables compilation of SSE-accelerated code. 
# Enabling these improves performance if the client CPU supports AVX or SSE, while disabling them reduces compile time and binary size.
# If both are enabled, RustFFT will use AVX if the CPU supports it. If not, it will check for SSE4.1.
# If neither instruction set is available, it will fall back to the scalar code.  
#
# On AArch64, the "neon" feature enables compilation of Neon-accelerated code.
#
# On wasm32, the "wasm_simd" feature enables compilation of Wasm SIMD accelerated code.
#
# For all of the above features, on every platform other than the intended platform for the feature, these features do nothing, and RustFFT will behave like they are not set.
avx = []
sse3 = []
neon = []
wasm_simd = []